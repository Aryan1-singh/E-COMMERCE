{"ast":null,"code":"// \"use client\";\n// import \"./login.css\";\n// import { useState } from \"react\";\n// import axios from \"axios\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import \"bootstrap-icons/font/bootstrap-icons.css\";\n// import React from \"react\";\n// import { useNavigate } from 'react-router-dom';\n// import { ToastContainer, toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n// import { FaEye, FaEyeSlash } from 'react-icons/fa';\n// import { useFormik } from \"formik\";\n\n// export default function Login() {\n//   const Base_Url = 'http://localhost:8000/';\n//   const navigate = useNavigate();\n\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [username, setUsername] = useState(\"\");\n//   const [name, setName] = useState(\"\");\n//   const [isRegistering, setIsRegistering] = useState(false);\n//   const [error, setError] = useState(\"\");\n//   const [showPassword, setShowPassword] = useState(false);\n\n//   const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n//   const handleTogglePasswordVisibility = () => {\n//     setShowPassword((prev) => !prev);\n//   };\n\n//   const handleLogin = async () => {\n//     if (!email || !password) {\n//       toast.error(\"Please fill in both fields\");\n//       return;\n//     }\n\n//     try {\n//       const response = await axios.post(`${Base_Url}users/login`, {\n//         email,\n//         password,\n//       });\n\n//       if (response.data.token) {\n//         localStorage.setItem(\"authToken\", response.data.token);\n//         navigate('/dashboard');\n//       } else {\n//         setError(\"Invalid email or password\");\n//       }\n//     } catch (error) {\n//       toast.error(\"Login failed. Please try again.\");\n//     }\n//   };\n\n//   const handleRegister = async () => {\n//     if (!username || !name || !email || !password) {\n//       toast.error(\"Please fill in all fields\");\n//       return;\n//     }\n\n//     if (!emailRegex.test(email)) {\n//       toast.error(\"Please enter a valid email address\");\n//       return;\n//     }\n\n//     try {\n//       const response = await axios.post(`${Base_Url}users`, {\n//         username,\n//         name,\n//         email,\n//         password,\n//       });\n\n//       if (response.status === 201) {\n//         toast.success(\"User registered successfully\");\n//         setIsRegistering(false);\n//       }\n//     } catch (error) {\n//       toast.error(\"Registration failed. Please try again.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"container1\">\n//       <ToastContainer />\n\n//       <div className=\"loginItem\">\n//         <h1 className=\"text-center fontLogin\">\n//           {isRegistering ? \"Create Your Account\" : \"Login to Your Account\"}\n//         </h1>\n\n//         <h5 className=\"text-center mt-4 fontCommon\">\n//           {isRegistering ? \"Welcome to the E-Commerce.\" : \"Welcome to the E-Commerce.\"}\n//         </h5>\n//       </div>\n\n//       <div className=\"textBox\">\n//         <div className=\"inputBoxLeft\">\n//           {isRegistering && (\n//             <>\n//               <div>\n//                 <input\n//                   type=\"text\"\n//                   aria-label=\"Username\"\n//                   className=\"form-control px-3 py-3 textBorder\"\n//                   placeholder=\"Username\"\n//                   value={username}\n//                   onChange={(e) => setUsername(e.target.value)}\n//                 />\n//               </div>\n//               <div>\n//                 <input\n//                   type=\"text\"\n//                   aria-label=\"Name\"\n//                   className=\"form-control px-3 py-3 mt-3 textBorder\"\n//                   placeholder=\"Name\"\n//                   value={name}\n//                   onChange={(e) => setName(e.target.value)}\n//                 />\n//               </div>\n//             </>\n//           )}\n\n//           <div>\n//             <input\n//               type=\"text\"\n//               aria-label=\"Email\"\n//               className=\"form-control px-3 py-3 mt-3 textBorder\"\n//               placeholder=\"Email\"\n//               value={email}\n//               onChange={(e) => setEmail(e.target.value)}\n//             />\n//           </div>\n//           <div>\n//           <div className=\"password-input-wrapper\">\n\n//             <input\n//               type={showPassword ? 'text' : 'password'}\n//               aria-label=\"Password\"\n//               className=\"form-control px-3 py-3 mt-3 textBorder\"\n//               placeholder=\"Password\"\n//               value={password}\n//               onChange={(e) => setPassword(e.target.value)}\n//             />\n\n//             <div className=\"password-toggle\" onClick={handleTogglePasswordVisibility}>\n//               {showPassword ? <FaEyeSlash /> : <FaEye />}\n//             </div>\n//           </div>\n//           </div>\n\n//           {error && <div className=\"text-danger mt-3\">{error}</div>}\n\n//           <div className=\"d-flex justify-content-between mt-3\">\n//             {!isRegistering && (\n//               <>\n//                 <div className=\"form-check\">\n//                   <input\n//                     type=\"checkbox\"\n//                     className=\"form-check-input\"\n//                     id=\"rememberMe\"\n//                   />\n//                   <label className=\"form-check-label Register\" htmlFor=\"rememberMe\">\n//                     Remember Me\n//                   </label>\n//                 </div>\n//                 <a href=\"#\" className=\" forgot\">Forgot Password?</a>\n//               </>\n//             )}\n//           </div>\n\n//           <div className=\"d-flex justify-content-center mt-3\">\n//             <button\n//               className=\"btn px-3 py-3 text-dark form-control loginButton\"\n//               onClick={isRegistering ? handleRegister : handleLogin}\n//             >\n//               {isRegistering ? \"Create Account\" : \"Login to your Account\"}\n//             </button>\n//           </div>\n\n//           {!isRegistering ? (\n//             <span className=\"d-flex justify-content-center Register\" onClick={() => setIsRegistering(true)}>\n//               Don't have an account? Register\n//             </span>\n//           ) : (\n//             <span className=\"d-flex justify-content-center Register\" onClick={() => setIsRegistering(false)}>\n//               Already have an account? Login\n//             </span>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n\"use client\";\n\nvar _jsxFileName = \"/home/hp/Aryan/mayank/E-COMMERCE/frontend/src/components/Login/login.tsx\",\n  _s = $RefreshSig$();\nimport \"./login.css\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport React from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { FaEye, FaEyeSlash } from 'react-icons/fa';\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const BASE_URL = process.env.REACT_APP_API_BASE_URL;\n  const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n  const handleTogglePasswordVisibility = () => {\n    setShowPassword(prev => !prev);\n  };\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\n      password: Yup.string().required(\"Required\")\n    }),\n    onSubmit: async values => {\n      try {\n        const response = await axios.post(`${BASE_URL}users/login`, {\n          email: values.email,\n          password: values.password\n        });\n        if (response.data.token) {\n          localStorage.setItem(\"authToken\", response.data.token);\n          navigate('/manageOrder');\n          toast.error(\"Login Successful\");\n        } else {\n          toast.error(\"Invalid email or password\");\n        }\n      } catch (error) {\n        toast.error(\"Login failed. Please try again.\");\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container1\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginItem\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center fontLogin\",\n        children: \"Login to Your Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"text-center mt-4 fontCommon\",\n        children: \"Welcome to the BAYBUY.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      className: \"textBox\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputBoxLeft\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          \"aria-label\": \"Email\",\n          className: `form-control px-3 py-3 mt-3 textBorder ${formik.touched.email && formik.errors.email ? 'is-invalid' : ''}`,\n          placeholder: \"Email\",\n          ...formik.getFieldProps('email')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), formik.touched.email && formik.errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-danger mt-1\",\n          children: formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password-input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: showPassword ? 'text' : 'password',\n            \"aria-label\": \"Password\",\n            className: `form-control px-3 py-3 mt-3 textBorder ${formik.touched.password && formik.errors.password ? 'is-invalid' : ''}`,\n            placeholder: \"Password\",\n            ...formik.getFieldProps('password')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"password-toggle\",\n            onClick: handleTogglePasswordVisibility,\n            children: showPassword ? /*#__PURE__*/_jsxDEV(FaEyeSlash, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 31\n            }, this) : /*#__PURE__*/_jsxDEV(FaEye, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), formik.touched.password && formik.errors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-danger mt-1\",\n          children: formik.errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"form-check-input\",\n              id: \"rememberMe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-check-label Register\",\n              htmlFor: \"rememberMe\",\n              children: \"Remember Me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            className: \"forgot\",\n            children: \"Forgot Password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn px-3 py-3 text-dark form-control loginButton mt-3\",\n          children: \"Login to your Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"TyfXYEpvWDWRGnFGjig1zuRer3M=\", false, function () {\n  return [useNavigate, useFormik];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","axios","React","useNavigate","ToastContainer","toast","FaEye","FaEyeSlash","useFormik","Yup","jsxDEV","_jsxDEV","Login","BASE_URL","process","env","REACT_APP_API_BASE_URL","navigate","showPassword","setShowPassword","handleTogglePasswordVisibility","prev","formik","initialValues","email","password","validationSchema","object","string","required","onSubmit","values","response","post","data","token","localStorage","setItem","error","className","children","fileName","lineNumber","columnNumber","handleSubmit","type","touched","errors","placeholder","getFieldProps","onClick","id","htmlFor","href","_c","$RefreshReg$"],"sources":["/home/hp/Aryan/mayank/E-COMMERCE/frontend/src/components/Login/login.tsx"],"sourcesContent":["// \"use client\";\r\n// import \"./login.css\";\r\n// import { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import \"bootstrap-icons/font/bootstrap-icons.css\";\r\n// import React from \"react\";\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { ToastContainer, toast } from 'react-toastify';\r\n// import 'react-toastify/dist/ReactToastify.css';\r\n// import { FaEye, FaEyeSlash } from 'react-icons/fa';\r\n// import { useFormik } from \"formik\";\r\n \r\n\r\n\r\n// export default function Login() {\r\n//   const Base_Url = 'http://localhost:8000/';\r\n//   const navigate = useNavigate();\r\n\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [username, setUsername] = useState(\"\");\r\n//   const [name, setName] = useState(\"\");\r\n//   const [isRegistering, setIsRegistering] = useState(false);\r\n//   const [error, setError] = useState(\"\");\r\n//   const [showPassword, setShowPassword] = useState(false);\r\n\r\n//   const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n\r\n//   const handleTogglePasswordVisibility = () => {\r\n//     setShowPassword((prev) => !prev);\r\n//   };\r\n\r\n//   const handleLogin = async () => {\r\n//     if (!email || !password) {\r\n//       toast.error(\"Please fill in both fields\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await axios.post(`${Base_Url}users/login`, {\r\n//         email,\r\n//         password,\r\n//       });\r\n\r\n//       if (response.data.token) {\r\n//         localStorage.setItem(\"authToken\", response.data.token);\r\n//         navigate('/dashboard');\r\n//       } else {\r\n//         setError(\"Invalid email or password\");\r\n//       }\r\n//     } catch (error) {\r\n//       toast.error(\"Login failed. Please try again.\");\r\n//     }\r\n//   };\r\n\r\n//   const handleRegister = async () => {\r\n//     if (!username || !name || !email || !password) {\r\n//       toast.error(\"Please fill in all fields\");\r\n//       return;\r\n//     }\r\n\r\n//     if (!emailRegex.test(email)) {\r\n//       toast.error(\"Please enter a valid email address\");\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const response = await axios.post(`${Base_Url}users`, {\r\n//         username,\r\n//         name,\r\n//         email,\r\n//         password,\r\n//       });\r\n\r\n//       if (response.status === 201) {\r\n//         toast.success(\"User registered successfully\");\r\n//         setIsRegistering(false);\r\n//       }\r\n//     } catch (error) {\r\n//       toast.error(\"Registration failed. Please try again.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container1\">\r\n//       <ToastContainer />\r\n\r\n//       <div className=\"loginItem\">\r\n//         <h1 className=\"text-center fontLogin\">\r\n//           {isRegistering ? \"Create Your Account\" : \"Login to Your Account\"}\r\n//         </h1>\r\n\r\n//         <h5 className=\"text-center mt-4 fontCommon\">\r\n//           {isRegistering ? \"Welcome to the E-Commerce.\" : \"Welcome to the E-Commerce.\"}\r\n//         </h5>\r\n//       </div>\r\n\r\n//       <div className=\"textBox\">\r\n//         <div className=\"inputBoxLeft\">\r\n//           {isRegistering && (\r\n//             <>\r\n//               <div>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   aria-label=\"Username\"\r\n//                   className=\"form-control px-3 py-3 textBorder\"\r\n//                   placeholder=\"Username\"\r\n//                   value={username}\r\n//                   onChange={(e) => setUsername(e.target.value)}\r\n//                 />\r\n//               </div>\r\n//               <div>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   aria-label=\"Name\"\r\n//                   className=\"form-control px-3 py-3 mt-3 textBorder\"\r\n//                   placeholder=\"Name\"\r\n//                   value={name}\r\n//                   onChange={(e) => setName(e.target.value)}\r\n//                 />\r\n//               </div>\r\n//             </>\r\n//           )}\r\n\r\n//           <div>\r\n//             <input\r\n//               type=\"text\"\r\n//               aria-label=\"Email\"\r\n//               className=\"form-control px-3 py-3 mt-3 textBorder\"\r\n//               placeholder=\"Email\"\r\n//               value={email}\r\n//               onChange={(e) => setEmail(e.target.value)}\r\n//             />\r\n//           </div>\r\n//           <div>\r\n//           <div className=\"password-input-wrapper\">\r\n\r\n//             <input\r\n//               type={showPassword ? 'text' : 'password'}\r\n//               aria-label=\"Password\"\r\n//               className=\"form-control px-3 py-3 mt-3 textBorder\"\r\n//               placeholder=\"Password\"\r\n//               value={password}\r\n//               onChange={(e) => setPassword(e.target.value)}\r\n//             />\r\n\r\n//             <div className=\"password-toggle\" onClick={handleTogglePasswordVisibility}>\r\n//               {showPassword ? <FaEyeSlash /> : <FaEye />}\r\n//             </div>\r\n//           </div>\r\n//           </div>\r\n\r\n//           {error && <div className=\"text-danger mt-3\">{error}</div>}\r\n\r\n//           <div className=\"d-flex justify-content-between mt-3\">\r\n//             {!isRegistering && (\r\n//               <>\r\n//                 <div className=\"form-check\">\r\n//                   <input\r\n//                     type=\"checkbox\"\r\n//                     className=\"form-check-input\"\r\n//                     id=\"rememberMe\"\r\n//                   />\r\n//                   <label className=\"form-check-label Register\" htmlFor=\"rememberMe\">\r\n//                     Remember Me\r\n//                   </label>\r\n//                 </div>\r\n//                 <a href=\"#\" className=\" forgot\">Forgot Password?</a>\r\n//               </>\r\n//             )}\r\n//           </div>\r\n\r\n//           <div className=\"d-flex justify-content-center mt-3\">\r\n//             <button\r\n//               className=\"btn px-3 py-3 text-dark form-control loginButton\"\r\n//               onClick={isRegistering ? handleRegister : handleLogin}\r\n//             >\r\n//               {isRegistering ? \"Create Account\" : \"Login to your Account\"}\r\n//             </button>\r\n//           </div>\r\n\r\n//           {!isRegistering ? (\r\n//             <span className=\"d-flex justify-content-center Register\" onClick={() => setIsRegistering(true)}>\r\n//               Don't have an account? Register\r\n//             </span>\r\n//           ) : (\r\n//             <span className=\"d-flex justify-content-center Register\" onClick={() => setIsRegistering(false)}>\r\n//               Already have an account? Login\r\n//             </span>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\"use client\";\r\nimport \"./login.css\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport React from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { FaEye, FaEyeSlash } from 'react-icons/fa';\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nexport default function Login() {\r\n  const BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\n  const navigate = useNavigate();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleTogglePasswordVisibility = () => {\r\n    setShowPassword((prev) => !prev);\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: ''\r\n    },\r\n    validationSchema: Yup.object({\r\n      email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\r\n      password: Yup.string().required(\"Required\"),\r\n    }),\r\n    onSubmit: async (values) => {\r\n      try {\r\n        const response = await axios.post(`${BASE_URL}users/login`, {\r\n          email: values.email,\r\n          password: values.password,\r\n        });\r\n\r\n        if (response.data.token) {\r\n          localStorage.setItem(\"authToken\", response.data.token);\r\n          navigate('/manageOrder');\r\n          toast.error(\"Login Successful\");\r\n\r\n        } else {\r\n          toast.error(\"Invalid email or password\");\r\n        }\r\n      } catch (error) {\r\n        toast.error(\"Login failed. Please try again.\");\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"container1\">\r\n      <ToastContainer />\r\n      <div className=\"loginItem\">\r\n        <h1 className=\"text-center fontLogin\">Login to Your Account</h1>\r\n        <h5 className=\"text-center mt-4 fontCommon\">Welcome to the BAYBUY.</h5>\r\n      </div>\r\n\r\n      <form onSubmit={formik.handleSubmit} className=\"textBox\">\r\n        <div className=\"inputBoxLeft\">\r\n          <input\r\n            type=\"text\"\r\n            aria-label=\"Email\"\r\n            className={`form-control px-3 py-3 mt-3 textBorder ${\r\n              formik.touched.email && formik.errors.email ? 'is-invalid' : ''\r\n            }`}\r\n            placeholder=\"Email\"\r\n            {...formik.getFieldProps('email')}\r\n          />\r\n          {formik.touched.email && formik.errors.email && (\r\n            <div className=\"text-danger mt-1\">{formik.errors.email}</div>\r\n          )}\r\n\r\n          <div className=\"password-input-wrapper\">\r\n            <input\r\n              type={showPassword ? 'text' : 'password'}\r\n              aria-label=\"Password\"\r\n              className={`form-control px-3 py-3 mt-3 textBorder ${\r\n                formik.touched.password && formik.errors.password ? 'is-invalid' : ''\r\n              }`}\r\n              placeholder=\"Password\"\r\n              {...formik.getFieldProps('password')}\r\n            />\r\n            <div className=\"password-toggle\" onClick={handleTogglePasswordVisibility}>\r\n              {showPassword ? <FaEyeSlash /> : <FaEye />}\r\n            </div>\r\n          </div>\r\n          {formik.touched.password && formik.errors.password && (\r\n            <div className=\"text-danger mt-1\">{formik.errors.password}</div>\r\n          )}\r\n\r\n          <div className=\"d-flex justify-content-between mt-3\">\r\n            <div className=\"form-check\">\r\n              <input type=\"checkbox\" className=\"form-check-input\" id=\"rememberMe\" />\r\n              <label className=\"form-check-label Register\" htmlFor=\"rememberMe\">\r\n                Remember Me\r\n              </label>\r\n            </div>\r\n            <a href=\"#\" className=\"forgot\">Forgot Password?</a>\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn px-3 py-3 text-dark form-control loginButton mt-3\"\r\n          >\r\n            Login to your Account\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,YAAY;;AAAC,IAAAA,YAAA;EAAAC,EAAA,GAAAC,YAAA;AACb,OAAO,aAAa;AACpB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,sCAAsC;AAC7C,OAAO,0CAA0C;AACjD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAC9C,SAASC,KAAK,EAAEC,UAAU,QAAQ,gBAAgB;AAClD,SAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}