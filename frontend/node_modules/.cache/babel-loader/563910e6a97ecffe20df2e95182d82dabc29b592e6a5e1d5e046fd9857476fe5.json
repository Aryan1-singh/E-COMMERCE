{"ast":null,"code":"var _jsxFileName = \"D:\\\\aryan\\\\New folder\\\\E-COMMERCE\\\\frontend\\\\src\\\\components\\\\Order\\\\order.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport \"./order.css\";\nimport Sidebar from '../Sidebar/sidebar';\nimport Popup from '../Popup/popup';\nimport { useNavigate } from 'react-router-dom';\nimport Pagination from '../Pagination/paagination';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Order() {\n  _s();\n  const Base_Url = 'http://localhost:8000/';\n  const navigate = useNavigate();\n  const [tableData, setTableData] = useState([]);\n  const [formData, setFormData] = useState({\n    productName: '',\n    quantity: 0,\n    price: 0\n  });\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [popupTitle, setPopupTitle] = useState('');\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(2);\n  const [totalQuantity, setTotalQuantity] = useState(0);\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [customerName, setCustomerName] = useState('');\n  const [customers, setCustomers] = useState([]); // Set type for customers\n  const [selectedCustomer, setSelectedCustomer] = useState('');\n  useEffect(() => {\n    const token = localStorage.getItem(\"authToken\");\n    if (!token) {\n      window.location.href = \"/\";\n    }\n  }, [navigate]);\n  useEffect(() => {\n    const calculateTotals = () => {\n      const totalQty = tableData.reduce((sum, item) => sum + item.quantity, 0);\n      const totalPr = tableData.reduce((sum, item) => sum + item.price, 0);\n      setTotalQuantity(totalQty);\n      setTotalPrice(totalPr);\n    };\n    calculateTotals();\n  }, [tableData]);\n  useEffect(() => {\n    const fetchCustomers = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/customer');\n        setCustomers(response.data); // Assuming response.data contains an array of customers\n      } catch (error) {\n        console.error('Error fetching customers:', error);\n      }\n    };\n    fetchCustomers();\n  }, []);\n  const handleCustomerChange = e => {\n    setSelectedCustomer(e.target.value);\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/addorders');\n        setTableData(response.data); // Assuming response.data contains the array of order items\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        toast.error('Failed to fetch orders');\n      }\n    };\n    fetchData();\n  }, []);\n  const handleAddClick = () => {\n    setPopupTitle('Add Order');\n    setFormData({\n      productName: '',\n      quantity: 0,\n      price: 0\n    });\n    setSelectedItem(null);\n    setIsPopupOpen(true);\n  };\n  const handleEditClick = item => {\n    setPopupTitle('Edit Order');\n    setFormData({\n      productName: item.productName,\n      quantity: item.quantity,\n      price: item.price\n    });\n    setSelectedItem(item);\n    setIsPopupOpen(true);\n  };\n\n  // const handleDeleteClick = async (item: OrderItem) => {\n  //   try {\n  //     await axios.delete(`http://localhost:8000/addorders/${item.orderId}`);\n  //     setTableData((prevTableData) =>\n  //       prevTableData.filter((data) => data.orderId !== item.orderId)\n  //     );\n  //   } catch (error) {\n  //     console.error('Error deleting order:', error);\n  //   }\n  // };\n\n  const handleDeleteClick = item => {\n    // Update local state to remove the order\n    setTableData(prevTableData => {\n      // Calculate new totals\n      const newTotalQuantity = prevTableData.reduce((sum, data) => sum + data.quantity, 0) - item.quantity;\n      const newTotalPrice = prevTableData.reduce((sum, data) => sum + data.price, 0) - item.price;\n\n      // Update totals in state\n      setTotalQuantity(newTotalQuantity);\n      setTotalPrice(newTotalPrice);\n\n      // Return new state without the deleted order\n      return prevTableData.filter(data => data.orderId !== item.orderId);\n    });\n  };\n  const handleClosePopup = () => {\n    setIsPopupOpen(false);\n  };\n\n  // const handleSaveClick = async () => {\n  //   if (!formData.productName || !formData.quantity || !formData.price) {\n  //     toast.error(\"Please fill in all fields\");\n  //     return;\n  //   }\n\n  //   try {\n  //     const response = await axios.post(`${Base_Url}addorders`, {\n  //       productName: formData.productName,\n  //       quantity: formData.quantity,\n  //       price: formData.price\n  //     });\n\n  //     console.log(response.data);\n\n  //     if (response.data) {\n  //       const newOrder: OrderItem = {\n  //         orderId: response.data.orderId,\n  //         productName: formData.productName,\n  //         quantity: formData.quantity,\n  //         price: formData.price\n  //       };\n\n  //       setTableData((prev) => [...prev, newOrder]);\n\n  //       setFormData({ productName: '', quantity: 0, price: 0 });\n\n  //       toast.success(\"Order saved successfully!\");\n  //       setIsPopupOpen(false);\n  //     } else {\n  //       toast.error(\"Failed to save order\");\n  //     }\n  //   } catch (error) {\n  //     toast.error(\"An error occurred while saving the order\");\n  //     console.error(error);\n  //   }\n  // };\n\n  const handleSaveClick = async () => {\n    if (!formData.productName || !formData.quantity || !formData.price) {\n      toast.error(\"Please fill in all fields\");\n      return;\n    }\n    try {\n      const response = await axios.post(`${Base_Url}addorders`, {\n        productName: formData.productName,\n        quantity: formData.quantity,\n        price: formData.price\n      });\n      console.log(response.data);\n      if (response.data) {\n        const newOrder = {\n          orderId: response.data.orderId,\n          productName: formData.productName,\n          quantity: formData.quantity,\n          price: formData.price\n        };\n\n        // Update local state\n        setTableData(prev => [...prev, newOrder]);\n        setTotalQuantity(prev => prev + formData.quantity);\n        setTotalPrice(prev => prev + formData.price);\n        setFormData({\n          productName: '',\n          quantity: 0,\n          price: 0\n        });\n        toast.success(\"Order saved successfully!\");\n        setIsPopupOpen(false);\n      } else {\n        toast.error(\"Failed to save order\");\n      }\n    } catch (error) {\n      toast.error(\"An error occurred while saving the order\");\n      console.error(error);\n    }\n  };\n\n  // const handleSaveOrderClick = async () => {\n  //   if (!customerName || totalQuantity === 0 || totalPrice === 0) {\n  //     toast.error(\"Please ensure that the customer name, total quantity, and total price are provided\");\n  //     return;\n  //   }\n\n  //   try {\n  //     const response = await axios.post(`${Base_Url}orders`, {\n  //       customerName,\n  //       totalQuantity,\n  //       totalPrice\n  //     });\n\n  //     if (response.data) {\n  //       toast.success(\"Order saved successfully!\");\n\n  //       await axios.delete(`${Base_Url}addorders`);\n  //       // toast.success(\"Previous orders deleted successfully!\");\n  //       navigate('/dashboard');\n\n  //       setTableData([]);\n  //     } else {\n  //       toast.error(\"Failed to save order\");\n  //     }\n  //   } catch (error) {\n  //     toast.error(\"An error occurred while saving or deleting the orders\");\n  //     console.error(error);\n  //   }\n  // };\n\n  // const handleUpdateClick = async () => {\n  //   if (!formData.productName || !formData.quantity || !formData.price) {\n  //     toast.error(\"Please fill in all fields\");\n  //     return;\n  //   }\n\n  //   try {\n  //     if (selectedItem) {\n  //       const response = await axios.put(`${Base_Url}addorders/${selectedItem.orderId}`, {\n  //         productName: formData.productName,\n  //         quantity: formData.quantity,\n  //         price: formData.price,\n  //       });\n\n  //       if (response.data) {\n  //         setTableData((prev) =>\n  //           prev.map((item) =>\n  //             item.orderId === selectedItem.orderId\n  //               ? { ...item, productName: formData.productName, quantity: formData.quantity, price: formData.price }\n  //               : item\n  //           )\n  //         );\n\n  //         toast.success(\"Order updated successfully!\");\n  //         setIsPopupOpen(false);\n  //       } else {\n  //         toast.error(\"Failed to update order\");\n  //       }\n  //     }\n  //   } catch (error) {\n  //     toast.error(\"An error occurred while updating the order\");\n  //     console.error(error);\n  //   }\n  // };\n\n  const handleSaveOrderClick = async () => {\n    if (!selectedCustomer || totalQuantity === 0 || totalPrice === 0) {\n      toast.error(\"Please ensure that a customer is selected and totals are not zero\");\n      return;\n    }\n\n    // Find the selected customer object to retrieve their ID\n    const selectedCustomerObj = customers.find(customer => customer.fullName === selectedCustomer);\n    if (!selectedCustomerObj) {\n      toast.error(\"Selected customer not found\");\n      return;\n    }\n    try {\n      // Save each order item from tableData to the database\n      for (const orderItem of tableData) {\n        await axios.post(`${Base_Url}addorders`, {\n          customerId: selectedCustomerObj.Id,\n          // Use the customer's ID here\n          productName: orderItem.productName,\n          quantity: orderItem.quantity,\n          price: orderItem.price\n        });\n      }\n\n      // Save the overall order data\n      const response = await axios.post(`${Base_Url}orders`, {\n        customerId: selectedCustomerObj.Id,\n        totalQuantity,\n        totalPrice\n      });\n      if (response.data) {\n        toast.success(\"Order saved successfully!\");\n\n        // Clear tableData and reset totals\n        setTableData([]);\n        setTotalQuantity(0);\n        setTotalPrice(0);\n        navigate('/dashboard');\n      } else {\n        toast.error(\"Failed to save order\");\n      }\n    } catch (error) {\n      toast.error(\"An error occurred while saving the order\");\n      console.error(error);\n    }\n  };\n  const handleUpdateClick = async () => {\n    if (!formData.productName || !formData.quantity || !formData.price) {\n      toast.error(\"Please fill in all fields\");\n      return;\n    }\n    try {\n      if (selectedItem) {\n        const response = await axios.put(`${Base_Url}addorders/${selectedItem.orderId}`, {\n          productName: formData.productName,\n          quantity: formData.quantity,\n          price: formData.price\n        });\n        if (response.data) {\n          // Update local state\n          setTableData(prev => prev.map(item => item.orderId === selectedItem.orderId ? {\n            ...item,\n            productName: formData.productName,\n            quantity: formData.quantity,\n            price: formData.price\n          } : item));\n\n          // Update total quantity and price\n          const quantityDifference = formData.quantity - (selectedItem.quantity || 0);\n          const priceDifference = formData.price - (selectedItem.price || 0);\n          setTotalQuantity(prev => prev + quantityDifference);\n          setTotalPrice(prev => prev + priceDifference);\n          toast.success(\"Order updated successfully!\");\n          setIsPopupOpen(false);\n        } else {\n          toast.error(\"Failed to update order\");\n        }\n      }\n    } catch (error) {\n      toast.error(\"An error occurred while updating the order\");\n      console.error(error);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleCustomerNameChange = e => {\n    setCustomerName(e.target.value);\n  };\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = tableData.slice(indexOfFirstItem, indexOfLastItem);\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        height: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ps-4 borderTable\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex  align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-arrow-left backicon\",\n            onClick: () => navigate('/dashboard')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"order\",\n            children: \"Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"heading d-flex justify-content-between align-items-center\",\n          children: [\"Customer Name\", /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"customerDropdown\",\n            value: selectedCustomer,\n            onChange: handleCustomerChange,\n            className: \"ms-auto me-4 mt-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 15\n            }, this), customers.map(customer => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: customer.fullName,\n              children: customer.fullName\n            }, customer.Id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"heading d-flex justify-content-between align-items-center \",\n          children: [\"Total Quantity\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"ms-auto me-4 mt-2\",\n            readOnly: true,\n            value: totalQuantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"heading d-flex justify-content-between align-items-center\",\n          children: [\"Total Amount\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"ms-auto me-4 mt-2 borderradius-2\",\n            readOnly: true,\n            value: totalPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-end mt-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary ms-auto me-4\",\n            onClick: handleAddClick,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-bordered mt-2 \",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Product Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: currentItems.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.productName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn \",\n                  onClick: () => handleEditClick(item),\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-pencil-square\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 474,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn \",\n                  onClick: () => handleDeleteClick(item),\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-trash\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 477,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 19\n              }, this)]\n            }, item.orderId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          itemsPerPage: itemsPerPage,\n          totalItems: tableData.length,\n          paginate: paginate,\n          currentPage: currentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary ms-auto me-4\",\n            onClick: handleSaveOrderClick,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      isOpen: isPopupOpen,\n      onClose: handleClosePopup,\n      title: popupTitle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: \" Product Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"productName\"\n          // placeholder=\"Product Name\"\n          ,\n          className: \"form-control mb-2 mt-2\",\n          value: formData.productName,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: \" Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"quantity\"\n          // placeholder=\"Quantity\"\n          ,\n          className: \"form-control mb-2 mt-2\",\n          value: formData.quantity,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: \" Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"price\"\n          // placeholder=\"Price\"\n          ,\n          className: \"form-control mb-2 mt-2\",\n          value: formData.price,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: selectedItem ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary me-2\",\n            onClick: handleUpdateClick,\n            children: \"Update Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 7\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary me-2\",\n            onClick: handleSaveClick,\n            children: \"Save Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: handleClosePopup,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Order, \"veTCLNAkNKfkQPFbJggf6Fxdjlc=\", false, function () {\n  return [useNavigate];\n});\n_c = Order;\nexport default Order;\nfunction setError(arg0) {\n  throw new Error('Function not implemented.');\n}\nvar _c;\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"names":["useEffect","useState","Sidebar","Popup","useNavigate","Pagination","toast","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Order","_s","Base_Url","navigate","tableData","setTableData","formData","setFormData","productName","quantity","price","isPopupOpen","setIsPopupOpen","popupTitle","setPopupTitle","selectedItem","setSelectedItem","currentPage","setCurrentPage","itemsPerPage","totalQuantity","setTotalQuantity","totalPrice","setTotalPrice","customerName","setCustomerName","customers","setCustomers","selectedCustomer","setSelectedCustomer","token","localStorage","getItem","window","location","href","calculateTotals","totalQty","reduce","sum","item","totalPr","fetchCustomers","response","get","data","error","console","handleCustomerChange","e","target","value","fetchData","handleAddClick","handleEditClick","handleDeleteClick","prevTableData","newTotalQuantity","newTotalPrice","filter","orderId","handleClosePopup","handleSaveClick","post","log","newOrder","prev","success","handleSaveOrderClick","selectedCustomerObj","find","customer","fullName","orderItem","customerId","Id","handleUpdateClick","put","map","quantityDifference","priceDifference","handleInputChange","name","handleCustomerNameChange","indexOfLastItem","indexOfFirstItem","currentItems","slice","paginate","pageNumber","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","height","onClick","id","onChange","type","readOnly","scope","totalItems","length","isOpen","onClose","title","htmlFor","_c","setError","arg0","Error","$RefreshReg$"],"sources":["D:/aryan/New folder/E-COMMERCE/frontend/src/components/Order/order.tsx"],"sourcesContent":["import { SetStateAction, useEffect, useState } from 'react';\r\nimport \"./order.css\";\r\nimport Sidebar from '../Sidebar/sidebar';\r\nimport Popup from '../Popup/popup';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Pagination from '../Pagination/paagination';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { toast } from 'react-toastify';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n\r\n\r\ninterface OrderItem {\r\n  orderId: number;\r\n  productName: string;\r\n  quantity: number;\r\n  price: number;\r\n}\r\n\r\n\r\n\r\nfunction Order() {\r\n  const Base_Url = 'http://localhost:8000/';\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [tableData, setTableData] = useState<OrderItem[]>([]);\r\n  const [formData, setFormData] = useState({ productName: '', quantity: 0, price: 0 });\r\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\r\n  const [popupTitle, setPopupTitle] = useState('');\r\n  const [selectedItem, setSelectedItem] = useState<OrderItem | null>(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage] = useState(2);\r\n  const [totalQuantity, setTotalQuantity] = useState(0);\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n  const [customerName, setCustomerName] = useState('');\r\n  const [customers, setCustomers] = useState<Customer[]>([]); // Set type for customers\r\n  const [selectedCustomer, setSelectedCustomer] = useState('');\r\n\r\n\r\n  interface Customer {\r\n    Id: number;\r\n    fullName: string;\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"authToken\");\r\n    if (!token) {\r\n      window.location.href = \"/\";\r\n    }\r\n  }, [navigate]);\r\n\r\n  useEffect(() => {\r\n    const calculateTotals = () => {\r\n      const totalQty = tableData.reduce((sum, item) => sum + item.quantity, 0);\r\n      const totalPr = tableData.reduce((sum, item) => sum + item.price, 0);\r\n\r\n      setTotalQuantity(totalQty);\r\n      setTotalPrice(totalPr);\r\n    };\r\n\r\n    calculateTotals();\r\n  }, [tableData]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchCustomers = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:8000/customer');\r\n        setCustomers(response.data); // Assuming response.data contains an array of customers\r\n      } catch (error) {\r\n        console.error('Error fetching customers:', error);\r\n      }\r\n    };\r\n\r\n    fetchCustomers();\r\n  }, []);\r\n\r\n  const handleCustomerChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setSelectedCustomer(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:8000/addorders');\r\n        setTableData(response.data); // Assuming response.data contains the array of order items\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        toast.error('Failed to fetch orders');\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n\r\n\r\n  const handleAddClick = () => {\r\n    setPopupTitle('Add Order');\r\n    setFormData({ productName: '', quantity: 0, price: 0 });\r\n    setSelectedItem(null);\r\n    setIsPopupOpen(true);\r\n  };\r\n\r\n  const handleEditClick = (item: OrderItem) => {\r\n    setPopupTitle('Edit Order');\r\n    setFormData({ productName: item.productName, quantity: item.quantity, price: item.price });\r\n    setSelectedItem(item);\r\n    setIsPopupOpen(true);\r\n  };\r\n\r\n  // const handleDeleteClick = async (item: OrderItem) => {\r\n  //   try {\r\n  //     await axios.delete(`http://localhost:8000/addorders/${item.orderId}`);\r\n  //     setTableData((prevTableData) =>\r\n  //       prevTableData.filter((data) => data.orderId !== item.orderId)\r\n  //     );\r\n  //   } catch (error) {\r\n  //     console.error('Error deleting order:', error);\r\n  //   }\r\n  // };\r\n\r\n  const handleDeleteClick = (item: OrderItem) => {\r\n    // Update local state to remove the order\r\n    setTableData((prevTableData) => {\r\n      // Calculate new totals\r\n      const newTotalQuantity = prevTableData.reduce((sum, data) => sum + data.quantity, 0) - item.quantity;\r\n      const newTotalPrice = prevTableData.reduce((sum, data) => sum + data.price, 0) - item.price;\r\n  \r\n      // Update totals in state\r\n      setTotalQuantity(newTotalQuantity);\r\n      setTotalPrice(newTotalPrice);\r\n  \r\n      // Return new state without the deleted order\r\n      return prevTableData.filter((data) => data.orderId !== item.orderId);\r\n    });\r\n  };\r\n  \r\n\r\n  const handleClosePopup = () => {\r\n    setIsPopupOpen(false);\r\n  };\r\n\r\n  // const handleSaveClick = async () => {\r\n  //   if (!formData.productName || !formData.quantity || !formData.price) {\r\n  //     toast.error(\"Please fill in all fields\");\r\n  //     return;\r\n  //   }\r\n\r\n  //   try {\r\n  //     const response = await axios.post(`${Base_Url}addorders`, {\r\n  //       productName: formData.productName,\r\n  //       quantity: formData.quantity,\r\n  //       price: formData.price\r\n  //     });\r\n\r\n  //     console.log(response.data);\r\n\r\n  //     if (response.data) {\r\n  //       const newOrder: OrderItem = {\r\n  //         orderId: response.data.orderId,\r\n  //         productName: formData.productName,\r\n  //         quantity: formData.quantity,\r\n  //         price: formData.price\r\n  //       };\r\n\r\n  //       setTableData((prev) => [...prev, newOrder]);\r\n\r\n  //       setFormData({ productName: '', quantity: 0, price: 0 });\r\n\r\n  //       toast.success(\"Order saved successfully!\");\r\n  //       setIsPopupOpen(false);\r\n  //     } else {\r\n  //       toast.error(\"Failed to save order\");\r\n  //     }\r\n  //   } catch (error) {\r\n  //     toast.error(\"An error occurred while saving the order\");\r\n  //     console.error(error);\r\n  //   }\r\n  // };\r\n\r\n  const handleSaveClick = async () => {\r\n    if (!formData.productName || !formData.quantity || !formData.price) {\r\n      toast.error(\"Please fill in all fields\");\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const response = await axios.post(`${Base_Url}addorders`, {\r\n        productName: formData.productName,\r\n        quantity: formData.quantity,\r\n        price: formData.price\r\n      });\r\n  \r\n      console.log(response.data);\r\n  \r\n      if (response.data) {\r\n        const newOrder: OrderItem = {\r\n          orderId: response.data.orderId,\r\n          productName: formData.productName,\r\n          quantity: formData.quantity,\r\n          price: formData.price\r\n        };\r\n  \r\n        // Update local state\r\n        setTableData((prev) => [...prev, newOrder]);\r\n        setTotalQuantity((prev) => prev + formData.quantity);\r\n        setTotalPrice((prev) => prev + formData.price);\r\n  \r\n        setFormData({ productName: '', quantity: 0, price: 0 });\r\n  \r\n        toast.success(\"Order saved successfully!\");\r\n        setIsPopupOpen(false);\r\n      } else {\r\n        toast.error(\"Failed to save order\");\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"An error occurred while saving the order\");\r\n      console.error(error);\r\n    }\r\n  };\r\n  \r\n\r\n\r\n\r\n  // const handleSaveOrderClick = async () => {\r\n  //   if (!customerName || totalQuantity === 0 || totalPrice === 0) {\r\n  //     toast.error(\"Please ensure that the customer name, total quantity, and total price are provided\");\r\n  //     return;\r\n  //   }\r\n\r\n  //   try {\r\n  //     const response = await axios.post(`${Base_Url}orders`, {\r\n  //       customerName,\r\n  //       totalQuantity,\r\n  //       totalPrice\r\n  //     });\r\n\r\n  //     if (response.data) {\r\n  //       toast.success(\"Order saved successfully!\");\r\n\r\n  //       await axios.delete(`${Base_Url}addorders`);\r\n  //       // toast.success(\"Previous orders deleted successfully!\");\r\n  //       navigate('/dashboard');\r\n\r\n  //       setTableData([]);\r\n  //     } else {\r\n  //       toast.error(\"Failed to save order\");\r\n  //     }\r\n  //   } catch (error) {\r\n  //     toast.error(\"An error occurred while saving or deleting the orders\");\r\n  //     console.error(error);\r\n  //   }\r\n  // };\r\n\r\n  // const handleUpdateClick = async () => {\r\n  //   if (!formData.productName || !formData.quantity || !formData.price) {\r\n  //     toast.error(\"Please fill in all fields\");\r\n  //     return;\r\n  //   }\r\n\r\n  //   try {\r\n  //     if (selectedItem) {\r\n  //       const response = await axios.put(`${Base_Url}addorders/${selectedItem.orderId}`, {\r\n  //         productName: formData.productName,\r\n  //         quantity: formData.quantity,\r\n  //         price: formData.price,\r\n  //       });\r\n\r\n  //       if (response.data) {\r\n  //         setTableData((prev) =>\r\n  //           prev.map((item) =>\r\n  //             item.orderId === selectedItem.orderId\r\n  //               ? { ...item, productName: formData.productName, quantity: formData.quantity, price: formData.price }\r\n  //               : item\r\n  //           )\r\n  //         );\r\n\r\n  //         toast.success(\"Order updated successfully!\");\r\n  //         setIsPopupOpen(false);\r\n  //       } else {\r\n  //         toast.error(\"Failed to update order\");\r\n  //       }\r\n  //     }\r\n  //   } catch (error) {\r\n  //     toast.error(\"An error occurred while updating the order\");\r\n  //     console.error(error);\r\n  //   }\r\n  // };\r\n\r\n\r\n  const handleSaveOrderClick = async () => {\r\n    if (!selectedCustomer || totalQuantity === 0 || totalPrice === 0) {\r\n      toast.error(\"Please ensure that a customer is selected and totals are not zero\");\r\n      return;\r\n    }\r\n  \r\n    // Find the selected customer object to retrieve their ID\r\n    const selectedCustomerObj = customers.find(customer => customer.fullName === selectedCustomer);\r\n    if (!selectedCustomerObj) {\r\n      toast.error(\"Selected customer not found\");\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      // Save each order item from tableData to the database\r\n      for (const orderItem of tableData) {\r\n        await axios.post(`${Base_Url}addorders`, {\r\n          customerId: selectedCustomerObj.Id, // Use the customer's ID here\r\n          productName: orderItem.productName,\r\n          quantity: orderItem.quantity,\r\n          price: orderItem.price\r\n        });\r\n      }\r\n  \r\n      // Save the overall order data\r\n      const response = await axios.post(`${Base_Url}orders`, {\r\n        customerId: selectedCustomerObj.Id,\r\n        totalQuantity,\r\n        totalPrice\r\n      });\r\n  \r\n      if (response.data) {\r\n        toast.success(\"Order saved successfully!\");\r\n  \r\n        // Clear tableData and reset totals\r\n        setTableData([]);\r\n        setTotalQuantity(0);\r\n        setTotalPrice(0);\r\n  \r\n        navigate('/dashboard');\r\n      } else {\r\n        toast.error(\"Failed to save order\");\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"An error occurred while saving the order\");\r\n      console.error(error);\r\n    }\r\n  };\r\n  \r\n\r\n  const handleUpdateClick = async () => {\r\n    if (!formData.productName || !formData.quantity || !formData.price) {\r\n      toast.error(\"Please fill in all fields\");\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      if (selectedItem) {\r\n        const response = await axios.put(`${Base_Url}addorders/${selectedItem.orderId}`, {\r\n          productName: formData.productName,\r\n          quantity: formData.quantity,\r\n          price: formData.price,\r\n        });\r\n  \r\n        if (response.data) {\r\n          // Update local state\r\n          setTableData((prev) =>\r\n            prev.map((item) =>\r\n              item.orderId === selectedItem.orderId\r\n                ? { ...item, productName: formData.productName, quantity: formData.quantity, price: formData.price }\r\n                : item\r\n            )\r\n          );\r\n  \r\n          // Update total quantity and price\r\n          const quantityDifference = formData.quantity - (selectedItem.quantity || 0);\r\n          const priceDifference = formData.price - (selectedItem.price || 0);\r\n  \r\n          setTotalQuantity((prev) => prev + quantityDifference);\r\n          setTotalPrice((prev) => prev + priceDifference);\r\n  \r\n          toast.success(\"Order updated successfully!\");\r\n          setIsPopupOpen(false);\r\n        } else {\r\n          toast.error(\"Failed to update order\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"An error occurred while updating the order\");\r\n      console.error(error);\r\n    }\r\n  };\r\n  \r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleCustomerNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setCustomerName(e.target.value);\r\n  };\r\n\r\n\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = tableData.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  const paginate = (pageNumber: number) => setCurrentPage(pageNumber);\r\n\r\n\r\n  return (\r\n    <>\r\n      <Sidebar />\r\n      <div className=\"d-flex justify-content-center align-items-center\" style={{ height: '100vh' }}>\r\n        <div className=\"ps-4 borderTable\">\r\n          <div className='d-flex  align-items-center'>\r\n            <i className=\"bi bi-arrow-left backicon\" onClick={() => navigate('/dashboard')}></i>\r\n            <span className='order'>Order</span>\r\n          </div>\r\n          <div className='heading d-flex justify-content-between align-items-center'>\r\n            Customer Name\r\n            {/* <input type=\"text\"\r\n              className='ms-auto me-4 mt-2'\r\n              value={customerName}\r\n              onChange={handleCustomerNameChange}\r\n            /> */}\r\n            {/* <label htmlFor=\"customerDropdown\">Select Customer:</label> */}\r\n            <select\r\n              id=\"customerDropdown\"\r\n              value={selectedCustomer}\r\n              onChange={handleCustomerChange}\r\n              className='ms-auto me-4 mt-2'\r\n            >\r\n              <option value=\"\">Select a customer</option>\r\n              {customers.map((customer) => (\r\n                <option key={customer.Id} value={customer.fullName}>\r\n                  {customer.fullName}\r\n                </option>\r\n              ))}\r\n            </select>\r\n\r\n          </div>\r\n          <div className='heading d-flex justify-content-between align-items-center '>\r\n            Total Quantity\r\n            <input type=\"text\" className='ms-auto me-4 mt-2' readOnly value={totalQuantity} />\r\n\r\n          </div>\r\n          <div className='heading d-flex justify-content-between align-items-center'>\r\n            Total Amount\r\n            <input type=\"text\" className='ms-auto me-4 mt-2 borderradius-2' readOnly value={totalPrice} />\r\n\r\n          </div>\r\n\r\n          <div className=\"d-flex justify-content-end mt-2\">\r\n            <button className=\"btn btn-primary ms-auto me-4\" onClick={handleAddClick}>Add</button>\r\n          </div>\r\n          <table className=\"table table-bordered mt-2 \">\r\n            <thead>\r\n              <tr>\r\n                {/* <th scope=\"col\">Id</th> */}\r\n                <th scope=\"col\">Product Name</th>\r\n                <th scope=\"col\">Quantity</th>\r\n                <th scope=\"col\">Price</th>\r\n                <th scope=\"col\">Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {currentItems.map((item) => (\r\n                <tr key={item.orderId}>\r\n                  {/* <th scope=\"row\">{item.orderId}</th> */}\r\n                  <td>{item.productName}</td>\r\n                  <td>{item.quantity}</td>\r\n                  <td>{item.price}</td>\r\n                  <td>\r\n                    <button className=\"btn \" onClick={() => handleEditClick(item)}>\r\n                      <i className=\"bi bi-pencil-square\"></i>\r\n                    </button>\r\n                    <button className=\"btn \" onClick={() => handleDeleteClick(item)}>\r\n                      <i className=\"bi bi-trash\"></i>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n          <Pagination\r\n            itemsPerPage={itemsPerPage}\r\n            totalItems={tableData.length}\r\n            paginate={paginate}\r\n            currentPage={currentPage}\r\n          />\r\n          <div className=\"d-flex\">\r\n            <button className=\"btn btn-primary ms-auto me-4\" onClick={handleSaveOrderClick}>\r\n              Save\r\n            </button>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <Popup isOpen={isPopupOpen} onClose={handleClosePopup} title={popupTitle}>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"\"> Product Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"productName\"\r\n            // placeholder=\"Product Name\"\r\n            className=\"form-control mb-2 mt-2\"\r\n            value={formData.productName}\r\n            onChange={handleInputChange}\r\n          />\r\n          <label htmlFor=\"\"> Quantity</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"quantity\"\r\n            // placeholder=\"Quantity\"\r\n            className=\"form-control mb-2 mt-2\"\r\n            value={formData.quantity}\r\n            onChange={handleInputChange}\r\n          />\r\n\r\n          <label htmlFor=\"\"> Price</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"price\"\r\n            // placeholder=\"Price\"\r\n            className=\"form-control mb-2 mt-2\"\r\n            value={formData.price}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n\r\n        {/* {selectedItem ? (\r\n          <button className=\"btn btn-primary\" onClick={handleUpdateClick}>\r\n            Update Order\r\n          </button>\r\n        ) : (\r\n          <button className=\"btn btn-primary\" onClick={handleSaveClick}>\r\n            Save Order\r\n          </button>\r\n        )} */}\r\n\r\n<div className=\"d-flex justify-content-between mt-3\">\r\n  <div>\r\n    {selectedItem ? (\r\n      <button className=\"btn btn-primary me-2\" onClick={handleUpdateClick}>\r\n        Update Order\r\n      </button>\r\n    ) : (\r\n      <button className=\"btn btn-primary me-2\" onClick={handleSaveClick}>\r\n        Save Order\r\n      </button>\r\n    )}\r\n  </div>\r\n  <button className=\"btn btn-secondary\" onClick={handleClosePopup}>\r\n    Close\r\n  </button>\r\n</div>\r\n\r\n      </Popup>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Order;\r\nfunction setError(arg0: string) {\r\n  throw new Error('Function not implemented.');\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}